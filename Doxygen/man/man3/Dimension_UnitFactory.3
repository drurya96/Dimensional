.TH "Dimension::UnitFactory< Unit, DerivedFactory >" 3 "Version 0.4" "Dimensional" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Dimension::UnitFactory< Unit, DerivedFactory > \- Base factory class to produce unit objects\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <BaseDimension\&.h>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "\fBstatic\fP \fBUnit\fP & \fBGetInstance\fP (\fBconst\fP std::string &\fBname\fP, \fBbool\fP \fBinitialize\fP=\fBtrue\fP)"
.br
.RI "Return an instance of Unit with the given name\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<\fBtypename\fP \fBUnit\fP, \fBtypename\fP \fBDerivedFactory\fP>
.br
class Dimension::UnitFactory< Unit, DerivedFactory >"Base factory class to produce unit objects\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fIUnit\fP The derived unit class to instantiate 
.br
\fIDerivedFactory\fP Derived class for CRTP 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<\fBtypename\fP \fBUnit\fP , \fBtypename\fP \fBDerivedFactory\fP > \fBstatic\fP \fBUnit\fP & \fBDimension::UnitFactory\fP< \fBUnit\fP, \fBDerivedFactory\fP >::GetInstance (\fBconst\fP std::string & name, \fBbool\fP initialize = \fR\fBtrue\fP\fP)\fR [inline]\fP, \fR [static]\fP"

.PP
Return an instance of Unit with the given name\&. If a Unit with the given name already exists, return it\&. Otherwise, create a new instance and add it to the static instances map\&. Pass the initialize flag along when creating the new instance to determine whether the new instance should be initialized\&. Creating an unitialized Unit is useful to avoid circular dependencies between Unit instantiations\&. 
.PP
\fBParameters\fP
.RS 4
\fIname\fP The name of the Unit to retrieve or create 
.br
\fIinitialize\fP Flag indicating whether newly created instances should be initialized\&. 
.RE
.PP
\fBReturns\fP
.RS 4
An instance of Unit corresponding to name 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Dimensional from the source code\&.
