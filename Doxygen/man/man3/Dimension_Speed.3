.TH "Dimension::Speed" 3 "Version 0.4" "Dimensional" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Dimension::Speed \- \fBSpeed\fP dimension, derived from \fBBaseDimension\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <SpeedDimension\&.h>\fP
.PP
Inherits \fBDimension::BaseDimension< LengthTup, TimeTup >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSpeed\fP (\fBdouble\fP value, \fBLengthUnit\fP *\fBlength\fP, \fBTimeUnit\fP *\fBtime\fP)"
.br
.RI "Constructor value, length, and time units\&. "
.ti -1c
.RI "\fBSpeed\fP (\fBconst\fP \fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > &\fBbase\fP)"
.br
.RI "Cast operator from a \fBBaseDimension\fP\&. "
.in -1c

Public Member Functions inherited from \fBDimension::BaseDimension< LengthTup, TimeTup >\fP
.in +1c
.ti -1c
.RI "\fBBaseDimension\fP ()"
.br
.RI "Default constructor\&. "
.ti -1c
.RI "\fBBaseDimension\fP (\fBconst\fP \fBT\fP &\fBdimension\fP)"
.br
.RI "Constructor using existing dimension\&. "
.ti -1c
.RI "\fBBaseDimension\fP (\fBdouble\fP \fBnewValue\fP, \fBLengthTup\fP \fBnewNumList\fP, \fBTimeTup\fP \fBnewDenList\fP)"
.br
.RI "Constructor explicitly given all values\&. "
.ti -1c
.RI "\fBdouble\fP \fBGetVal\fP (\fBconst\fP std::tuple< NumTupleTypes\&.\&.\&. > &\fBi_numList\fP, \fBconst\fP std::tuple< DenTupleTypes\&.\&.\&. > &\fBi_denList\fP) \fBconst\fP"
.br
.RI "Return the internal value as a double in terms of the provided units\&. "
.ti -1c
.RI "\fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > & \fBoperator+=\fP (\fBconst\fP \fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > &\fBrhs\fP)"
.br
.RI "+= operator overload for another \fBDimension\fP "
.ti -1c
.RI "\fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > & \fBoperator+=\fP (\fBdouble\fP \fBrhs\fP)=\fBdelete\fP"
.br
.ti -1c
.RI "\fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > & \fBoperator\-=\fP (\fBconst\fP \fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > &\fBrhs\fP)"
.br
.RI "-= operator overload for another \fBDimension\fP "
.ti -1c
.RI "\fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > & \fBoperator\-=\fP (\fBdouble\fP \fBrhs\fP)=\fBdelete\fP"
.br
.ti -1c
.RI "\fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > & \fBoperator*=\fP (\fBdouble\fP \fBrhs\fP)"
.br
.RI "*= operator overload for a scalar "
.ti -1c
.RI "\fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > & \fBoperator*=\fP (\fBconst\fP \fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > &\fBrhs\fP)=\fBdelete\fP"
.br
.ti -1c
.RI "\fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > & \fBoperator/=\fP (\fBdouble\fP \fBrhs\fP)"
.br
.RI "/= operator overload for a scalar "
.ti -1c
.RI "\fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > & \fBoperator/=\fP (\fBconst\fP \fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > &\fBrhs\fP)=\fBdelete\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator>\fP (\fBconst\fP \fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > &\fBrhs\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator<\fP (\fBconst\fP \fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > &\fBrhs\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator>=\fP (\fBconst\fP \fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > &\fBrhs\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator<=\fP (\fBconst\fP \fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > &\fBrhs\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator==\fP (\fBconst\fP \fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > &\fBrhs\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator!=\fP (\fBconst\fP \fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > &\fBrhs\fP) \fBconst\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Public Attributes inherited from \fBDimension::BaseDimension< LengthTup, TimeTup >\fP
.in +1c
.ti -1c
.RI "\fBLengthTup\fP \fBnumList\fP"
.br
.RI "Tuple of units corresponding to the \fBDimension\fP numerator\&. "
.ti -1c
.RI "\fBTimeTup\fP \fBdenList\fP"
.br
.RI "Tuple of units corresponding to the \fBDimension\fP denominator\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBSpeed\fP dimension, derived from \fBBaseDimension\fP\&. 

This dimension is a specialization using \fBLength\fP and Inverse \fBTime\fP as units\&. 
.PP
\fBTodo\fP
.RS 4
Add some convenience methods to retrieve \fBSpeed\fP by name, such as MetersPerSecond, MilesPerHour, etc\&. 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "Dimension::Speed::Speed (\fBdouble\fP value, \fBLengthUnit\fP * length, \fBTimeUnit\fP * time)\fR [inline]\fP, \fR [explicit]\fP"

.PP
Constructor value, length, and time units\&. 
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP The value to set 
.br
\fIlength\fP Pointer to the length unit 
.br
\fItime\fP Pointer to the time unit 
.RE
.PP

.SS "Dimension::Speed::Speed (\fBconst\fP \fBBaseDimension\fP< \fBLengthTup\fP, \fBTimeTup\fP > & base)\fR [inline]\fP"

.PP
Cast operator from a \fBBaseDimension\fP\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Dimensional from the source code\&.
