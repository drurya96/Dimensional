.TH "Dimension::TimeUnit" 3 "Version 0.4" "Dimensional" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Dimension::TimeUnit \- \fBTime\fP unit, derived from \fBBaseUnit\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <TimeDimension\&.h>\fP
.PP
Inherits \fBDimension::BaseUnit< TimeUnit >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTimeUnit\fP (\fBconst\fP std::string &\fBname\fP)"
.br
.RI "Constructor only giving name, primary constructor\&. "
.ti -1c
.RI "\fBTimeUnit\fP ()"
.br
.RI "Default constructor\&. "
.ti -1c
.RI "\fBTimeUnit\fP & \fBoperator()\fP ()"
.br
.ti -1c
.RI "\fB~TimeUnit\fP ()"
.br
.RI "Default destructor\&. "
.ti -1c
.RI "\fBTimeUnit\fP * \fBGetPrimaryUnit\fP () \fBconst\fP \fBoverride\fP"
.br
.RI "Override for GetPrimaryUnit\&. "
.in -1c

Public Member Functions inherited from \fBDimension::BaseUnit< TimeUnit >\fP
.in +1c
.ti -1c
.RI "\fBBaseUnit\fP ()"
.br
.RI "Default constructor\&. "
.ti -1c
.RI "\fBBaseUnit\fP (\fBconst\fP std::string &\fBname\fP)"
.br
.RI "Constructor setting name\&. "
.ti -1c
.RI "\fBvirtual\fP \fB~BaseUnit\fP ()=0"
.br
.RI "Pure virtual destructor\&. "
.ti -1c
.RI "\fBvirtual\fP std::string \fBGetUnitName\fP () \fBconst\fP"
.br
.RI "Getter for the Unit name\&. "
.ti -1c
.RI "\fBconst\fP std::function< \fBdouble\fP(\fBdouble\fP)> & \fBgetConversion\fP (\fBconst\fP \fBBaseUnit\fP< \fBTimeUnit\fP > &\fBunit\fP) \fBconst\fP"
.br
.RI "Get the conversion functor from this unit to the provided unit\&. "
.ti -1c
.RI "\fBTimeUnit\fP & \fBadd_conversion\fP (\fBconst\fP \fBBaseUnit\fP< \fBTimeUnit\fP > &\fBtoUnit\fP, std::function< \fBdouble\fP(\fBdouble\fP)> \fBconversion\fP)"
.br
.RI "Add a conversion to the map of conversions\&. "
.ti -1c
.RI "\fBdouble\fP \fBConvertValue\fP (\fBconst\fP \fBdouble\fP \fBinput\fP, \fBconst\fP \fBBaseUnit\fP< \fBTimeUnit\fP > *\fBtoUnit\fP) \fBconst\fP"
.br
.RI "Convert the input value from this unit to the given unit\&. "
.ti -1c
.RI "\fBTimeUnit\fP & \fBInitialize\fP ()"
.br
.RI "Initialize unit and return a reference to self\&. "
.ti -1c
.RI "\fBbool\fP \fBisInitialized\fP ()"
.br
.RI "Public getter for initialized\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "\fBstatic\fP \fBConversionMap\fP \fBGetConversionMap\fP ()"
.br
.RI "Defines a static conversion map\&. "
.ti -1c
.RI "\fBstatic\fP \fBTimeUnit\fP & \fBGetInstance\fP (\fBconst\fP std::string &\fBname\fP, \fBbool\fP \fBinitialize\fP=\fBtrue\fP)"
.br
.RI "Call GetInstance using the corresponding \fBUnitFactory\fP\&. "
.in -1c

Static Public Member Functions inherited from \fBDimension::BaseUnit< TimeUnit >\fP
.in +1c
.ti -1c
.RI "\fBstatic\fP \fBbool\fP \fBValidateConversions\fP (\fBconst\fP std::vector< \fBBaseUnit\fP< \fBTimeUnit\fP > * > &\fBUnitVector\fP, \fBconst\fP \fBBaseUnit\fP< \fBTimeUnit\fP > &\fBPrimaryUnit\fP)"
.br
.RI "Validate all conversions\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBTime\fP unit, derived from \fBBaseUnit\fP\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Dimension::TimeUnit::TimeUnit (\fBconst\fP std::string & name)\fR [inline]\fP"

.PP
Constructor only giving name, primary constructor\&. 
.SS "Dimension::TimeUnit::TimeUnit ()\fR [inline]\fP"

.PP
Default constructor\&. This default constructor is necessary for some template metaprogramming on \fBBaseUnit\fP 
.SS "Dimension::TimeUnit::~TimeUnit ()\fR [inline]\fP"

.PP
Default destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBstatic\fP \fBConversionMap\fP Dimension::TimeUnit::GetConversionMap ()\fR [inline]\fP, \fR [static]\fP"

.PP
Defines a static conversion map\&. This static conversion map represents the operations needed to convert from one unit to another\&. All units \fBMUST\fP have a conversion to the Primary unit and the primary unit \fBMUST\fP have a conversion to each unit\&. 
.PP
\fBReturns\fP
.RS 4
The conversion map 
.RE
.PP

.SS "\fBstatic\fP \fBTimeUnit\fP & Dimension::TimeUnit::GetInstance (\fBconst\fP std::string & name, \fBbool\fP initialize = \fR\fBtrue\fP\fP)\fR [inline]\fP, \fR [static]\fP"

.PP
Call GetInstance using the corresponding \fBUnitFactory\fP\&. 
.SS "\fBTimeUnit\fP * Dimension::TimeUnit::GetPrimaryUnit () const\fR [inline]\fP, \fR [override]\fP, \fR [virtual]\fP"

.PP
Override for GetPrimaryUnit\&. Return a pointer to the primary unit\&.
.PP
Note the definition must appear after the global units are defined\&.
.PP
Return a pointer to Seconds, the primary unit 
.PP
\fBReturns\fP
.RS 4
Pointer to Seconds 
.RE
.PP

.PP
Implements \fBDimension::BaseUnit< TimeUnit >\fP\&.
.SS "\fBTimeUnit\fP & Dimension::TimeUnit::operator() ()\fR [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Dimensional from the source code\&.
